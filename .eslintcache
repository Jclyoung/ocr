[{"/Users/younjenn/Repository/ocr/src/index.js":"1","/Users/younjenn/Repository/ocr/src/App.js":"2","/Users/younjenn/Repository/ocr/src/reportWebVitals.js":"3"},{"size":500,"mtime":1609259394691,"results":"4","hashOfConfig":"5"},{"size":1624,"mtime":1609368279066,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609259401647,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"12zj37q",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/younjenn/Repository/ocr/src/index.js",[],["17","18"],"/Users/younjenn/Repository/ocr/src/App.js",["19"],"\nimport React, { useEffect, useState } from 'react';\n\nimport './App.css';\nimport ipsum from './assets/bacon.png';\n\nconst Tesseract = window.Tesseract;\n\nconst DefaultImage = () => (\n  <img className=\"img\" src={ ipsum } />\n);\n\nfunction App() {\n  const worker = Tesseract.createWorker({\n    logger: m => console.log(m),\n    langPath: '/customLanguageData',\n    gzip: false\n  });\n\n  const doOCR = async () => {\n    await worker.load();\n    await worker.loadLanguage('eng');\n    await worker.initialize('eng');\n    const { data: { text } } = await worker.recognize(sourceImage || ipsum);\n    setAnalyzingImage('')\n    setOcr(text);\n  };\n\n  const [ocr, setOcr] = useState();\n  const [sourceImage, setSourceImage] = useState(\"\");\n  const [analyzingMessage, setAnalyzingImage] = useState('Analyzing image....');\n\n  const UserImage = ({ image }) => (\n    <img className=\"img\" src={ URL.createObjectURL(image) } alt=\"\"/>\n  )\n\n  useEffect(() => {\n    doOCR();\n  });\n\n  return (\n    <div className=\"App\">\n      <div className=\"img\">\n        <h1>image to test</h1>\n        <form >\n          <input type=\"file\"\n            name=\"file\" \n            onChange={ (e) => {\n              setSourceImage(e.target.files[0]);\n              setOcr('');\n              setAnalyzingImage('Analyzing text...');\n              e.preventDefault();\n          }} />\n        </form>\n        { !sourceImage ? <DefaultImage /> : <UserImage image={ sourceImage } /> }\n      </div>\n      <div className=\"text-main\">\n        <h1>new rendered text</h1>\n        <p>{ analyzingMessage }</p>\n        <p>{ ocr }</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/younjenn/Repository/ocr/src/reportWebVitals.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":10,"column":3,"nodeType":"28","endLine":10,"endColumn":40},{"ruleId":"22","replacedBy":"29"},{"ruleId":"24","replacedBy":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["31"],["32"],"no-global-assign","no-unsafe-negation"]