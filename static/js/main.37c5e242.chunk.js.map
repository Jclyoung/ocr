{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Tesseract","window","defaultImage","className","src","alt","App","worker","createWorker","logger","m","console","log","doOCR","a","load","loadLanguage","initialize","recognize","sourceImage","text","data","setOcr","useState","ocr","setSourceImage","UserImage","image","URL","createObjectURL","useEffect","type","name","onChange","e","target","files","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAKMA,G,MAAYC,OAAOD,WAEnBE,EACJ,qBAAKC,UAAU,MAAMC,IAAI,mBAAmBC,IAAI,KAyDnCC,MApDf,WACE,IAAMC,EAASP,EAAUQ,aAAa,CACpCC,OAAQ,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,MAKrBG,EAAK,uCAAG,8BAAAC,EAAA,sEACNP,EAAOQ,OADD,uBAENR,EAAOS,aAAa,OAFd,uBAGNT,EAAOU,WAAW,OAHZ,uBAIqBV,EAAOW,UAAUC,GAAe,oBAJrD,gBAIIC,EAJJ,EAIJC,KAAQD,KAChBE,EAAOF,GALK,4CAAH,qDAPE,EAeSG,mBAAS,qBAflB,mBAeNC,EAfM,KAeDF,EAfC,OAgByBC,mBAAS,IAhBlC,mBAgBNJ,EAhBM,KAgBOM,EAhBP,KAkBPC,EAAY,SAAC,GAAD,EAAGC,MAAH,OAChB,qBAAKxB,UAAU,MAAMC,IAAMwB,IAAIC,gBAAgBV,GAAed,IAAI,MAQpE,OAJAyB,qBAAU,WACRjB,OAIA,sBAAKV,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,+CADF,IAEE,+BACE,uBAAO4B,KAAK,OACVC,KAAK,OACLC,SAAW,SAACC,GACVvB,QAAQC,IAAI,QAASsB,EAAEC,OAAOC,MAAM,IAEpCX,EAAeS,EAAEC,OAAOC,MAAM,IAC9BzB,QAAQC,IAAI,cAAeO,GAC3Be,EAAEG,sBAGLlB,EAA6B,cAACO,EAAD,CAAWC,MAAQR,IAAlCjB,KAEnB,sBAAKC,UAAU,YAAf,UACE,mDACA,4BAAKqB,WC/CEc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.37c5e242.chunk.js","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\n// import { createWorker } from 'tesseract.js';\nimport './App.css';\n\nconst Tesseract = window.Tesseract;\n\nconst defaultImage = (\n  <img className=\"img\" src=\"assets/card1.jpg\" alt=\"\"/> \n)\n\n\n\nfunction App() {\n  const worker = Tesseract.createWorker({\n    logger: m => console.log(m),\n  });\n\n  const path = \"assets/card1.jpg\"\n\n  const doOCR = async () => {\n    await worker.load();\n    await worker.loadLanguage('eng');\n    await worker.initialize('eng');\n    const { data: { text } } = await worker.recognize(sourceImage || \"assets/card1.jpg\");\n    setOcr(text);\n  };\n\n  const [ocr, setOcr] = useState('Scanning Image...');\n  const [sourceImage, setSourceImage] = useState(\"\");\n\n  const UserImage = ({ image }) => (\n    <img className=\"img\" src={ URL.createObjectURL(sourceImage) } alt=\"\"/>\n    // <img className=\"img\" src=\"assets/ipsum.png\" alt=\"\"/>\n  )\n\n  useEffect(() => {\n    doOCR();\n  });\n\n  return (\n    <div className=\"App\">\n      <div className=\"img\">\n        <h1>image to test</h1>a\n        <form >\n          <input type=\"file\"\n            name=\"file\" \n            onChange={ (e) => {\n              console.log('event', e.target.files[0]);\n            \n              setSourceImage(e.target.files[0]);\n              console.log('new state: ', sourceImage)\n              e.preventDefault();\n          }} />\n        </form>\n        { !sourceImage ? defaultImage : <UserImage image={ sourceImage } /> }\n      </div>\n      <div className=\"text-main\">\n        <h1>new rendered text</h1>\n        <p>{ ocr }</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n// import React from 'react';\n// import Tesseract from 'tesseract.js';\n// // import { Provider } from 'react-redux';\n// // import { createStore, compose } from 'redux';\n// // import Main from './Main';\n\n// // const store = createStore(\n// // );\n\n\n\n// function App() {\n//   // <Provider store={store}>\n//   const tesseractFunct = () => Tesseract.recognize(\n//   'assets/ipsum.png',\n//   'eng',\n//   { logger: m => console.log(m) }\n// ).then(({ data: { text } }) => {\n//   return text;\n// })\n//   return (\n//     <div className=\"App\">\n//       <div>\n//         <h1>image here</h1>\n//         <img src=\"assets/ipsum.png\" alt=\"\" />\n//       </div>\n//       <div>\n//         <h1>Output Here</h1>\n//         <p>\n//           {\n//             tesseractFunct(),\n\n//             imageText\n//           }\n//         </p>\n//       </div>\n\n//     </div>\n//   );\n//   // </Provider>\n  \n// }\n\n// export default App;\n\n\n\n// // working example\n// const { createWorker } = require('tesseract.js');\n\n// const worker = createWorker();\n\n// (async () => {\n//   await worker.load();\n//   await worker.loadLanguage('eng');\n//   await worker.initialize('eng');\n//   const { data: { text } } = await worker.recognize('assets/ipsum.png');\n//   console.log(text);\n//   await worker.terminate();\n// })();\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}