[{"/Users/younjenn/Repository/ocr/src/index.js":"1","/Users/younjenn/Repository/ocr/src/App.js":"2","/Users/younjenn/Repository/ocr/src/reportWebVitals.js":"3"},{"size":500,"mtime":1609259394691,"results":"4","hashOfConfig":"5"},{"size":2900,"mtime":1609259394706,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609259401647,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"12zj37q",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/Users/younjenn/Repository/ocr/src/index.js",[],["16","17"],"/Users/younjenn/Repository/ocr/src/App.js",["18"],"\nimport React, { useEffect, useState } from 'react';\n// import { createWorker } from 'tesseract.js';\nimport './App.css';\n\nconst Tesseract = window.Tesseract;\n\nconst defaultImage = (\n  <img className=\"img\" src=\"assets/card1.jpg\" alt=\"\"/> \n)\n\n\n\nfunction App() {\n  const worker = Tesseract.createWorker({\n    logger: m => console.log(m),\n  });\n\n  const path = \"assets/card1.jpg\"\n\n  const doOCR = async () => {\n    await worker.load();\n    await worker.loadLanguage('eng');\n    await worker.initialize('eng');\n    const { data: { text } } = await worker.recognize(sourceImage || \"assets/card1.jpg\");\n    setOcr(text);\n  };\n\n  const [ocr, setOcr] = useState('Scanning Image...');\n  const [sourceImage, setSourceImage] = useState(\"\");\n\n  const UserImage = ({ image }) => (\n    <img className=\"img\" src={ URL.createObjectURL(sourceImage) } alt=\"\"/>\n    // <img className=\"img\" src=\"assets/ipsum.png\" alt=\"\"/>\n  )\n\n  useEffect(() => {\n    doOCR();\n  });\n\n  return (\n    <div className=\"App\">\n      <div className=\"img\">\n        <h1>image to test</h1>a\n        <form >\n          <input type=\"file\"\n            name=\"file\" \n            onChange={ (e) => {\n              console.log('event', e.target.files[0]);\n            \n              setSourceImage(e.target.files[0]);\n              console.log('new state: ', sourceImage)\n              e.preventDefault();\n          }} />\n        </form>\n        { !sourceImage ? defaultImage : <UserImage image={ sourceImage } /> }\n      </div>\n      <div className=\"text-main\">\n        <h1>new rendered text</h1>\n        <p>{ ocr }</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n// import React from 'react';\n// import Tesseract from 'tesseract.js';\n// // import { Provider } from 'react-redux';\n// // import { createStore, compose } from 'redux';\n// // import Main from './Main';\n\n// // const store = createStore(\n// // );\n\n\n\n// function App() {\n//   // <Provider store={store}>\n//   const tesseractFunct = () => Tesseract.recognize(\n//   'assets/ipsum.png',\n//   'eng',\n//   { logger: m => console.log(m) }\n// ).then(({ data: { text } }) => {\n//   return text;\n// })\n//   return (\n//     <div className=\"App\">\n//       <div>\n//         <h1>image here</h1>\n//         <img src=\"assets/ipsum.png\" alt=\"\" />\n//       </div>\n//       <div>\n//         <h1>Output Here</h1>\n//         <p>\n//           {\n//             tesseractFunct(),\n\n//             imageText\n//           }\n//         </p>\n//       </div>\n\n//     </div>\n//   );\n//   // </Provider>\n  \n// }\n\n// export default App;\n\n\n\n// // working example\n// const { createWorker } = require('tesseract.js');\n\n// const worker = createWorker();\n\n// (async () => {\n//   await worker.load();\n//   await worker.loadLanguage('eng');\n//   await worker.initialize('eng');\n//   const { data: { text } } = await worker.recognize('assets/ipsum.png');\n//   console.log(text);\n//   await worker.terminate();\n// })();\n","/Users/younjenn/Repository/ocr/src/reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":19,"column":9,"nodeType":"25","messageId":"26","endLine":19,"endColumn":13},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'path' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]